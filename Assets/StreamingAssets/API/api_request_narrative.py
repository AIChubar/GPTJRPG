import openai
import os
import json
import re

with open('structure_narrative.json', 'r') as file:
    structure_content = file.read()

with open('units.json', 'r') as file:
    units_content = file.read()

with open('units_stats.json', 'r') as file:
    units_stats_content = file.read()

folder_path = os.path.join(os.pardir, "Worlds")
folder_names = [name for name in os.listdir(folder_path) if os.path.isdir(os.path.join(folder_path, name))]

with open('units_stats.json', 'r') as file:
    units_stats_content = file.read()
with open('units.json', 'r') as file:
    units_content = file.read()
def separate_words(name):
    return re.sub(r'([a-z])([A-Z])', r'\1\n\2', name)

# Separate words and join them with newline symbols
formatted_names = '\n'.join([separate_words(name) for name in folder_names])

response = openai.chat.completions.create(
    model="gpt-3.5-turbo-0125",
    temperature=1.0,
    max_tokens=4096,
    response_format={"type": "json_object"},
    messages=[
        {
            "role": "system",
            "content": "#Setting: \n You are a creative assistant for creating textual game content. You need to follow instructions while being creative and artistic. \n"
                       "#Instructions: \n "
                       "Generate a fantasy world setting describing specific features of this world. \n"
                       "Choose a story type. Story type defines if the protagonist (player) of the story will be 'good', 'neutral' or 'evil' character. \n"
                       "Generate a main antagonist unit around which the story of this world revolves. Its attitude is opposite to a player character, which means that for the evil story type antagonist should be good in fantasy world terms. \n"
                       "Also generate a main antagonist group consisting of two units. \n"
                       "Units should be generated by at first choosing the first attribute of each unit, which should be picked from outer objects names from 'units content' JSON file.\n"
                       "After that you should pick the second attribute that is defined by the name of the list inside first attribute object in 'units content' JSON. \n"
                       "The third one is the string in the corresponding to the second attribute list inside the corresponding to the first attribute object. The third attribute can be empty if the only string in the list is empty. \n"
                       "You can only take the second and third attributes from objects and lists corresponding to the previous attributes. \n"
                       "Here is the 'units content' JSON file: \n" + units_content + "\n"
                       "After that generate a characteristic name and base it on your interpretation of the second and the third attributes. It can consist of a few words. \n"
                       "After that generate an artistic name which should be an appropriate for this unit fantasy name. \n"
                       "Assign a power level for each unit based of your own knowledge about the creature, there are 3 different levels of power for antagonist group units: mighty, formidable, legendary. Always make the antagonist unit with the legendary power level \n"
                       "You also should assign a class of the unit to it depending on what fits your knowledge about particular fantasy unit. You cannot assign 2 same unit classes for one group. Pick the class type from this 'unit characteristics' JSON file: \n" + units_stats_content + "\n"
                       "Generate a name for this fantasy world that can consist of a few words. These words can resemble specific patterns of this world or a setting in which this world exists. \n"
                       "Generate a descriptive story of this world that tells main features and problems of this world. \n"
                       "Generate a greeting game message for the unnamed protagonist entering this world from the almighty observer. \n"
                       "The main point of the world narrative is the interaction with the antagonist, story that you provide is everything before the protagonist and antagonist meet. \n"
                       "You should generate a game outcome message that will develop the story in case the main antagonist was defeated. \n"
                       "There is also an outcome when player was defeated during the game and it also have it's outcome that is likely bad for the game world. Generate this message as well. \n"
                       "Fill the generated content into the appropriate variables in the given JSON structure. \n"
                       "#Constraints: \n"
                       "1. Do not include specific symbols in the generated world name. Always separate words starting with capital letter with spaces.\n"
                       "2. Prefer not to use words for the world name that already exists in the already created worlds from this list: \n" + formatted_names + "\n"
                       "3. Artistic name and characteristic name of the same unit should not be similar. \n"
                       "#Structure: \n" + structure_content + "\n"
        },
        {
            "role": "user",
            "content": "Start generating."
        }
    ]
)

json_result = json.loads(response.choices[-1].message.content)

folder_path = os.path.join(os.pardir, "Worlds", json_result["worldName"].replace(" ", ""))

os.makedirs(folder_path, exist_ok=True)

with open(os.path.join(folder_path, "Narrative.json"), 'w') as f:
    json.dump(json_result, f, indent=2)
    
with open('current_world.json', 'r+') as f:
    data = json.load(f)
    data['worldName'] = json_result["worldName"].replace(" ", "")
    f.seek(0)
    json.dump(data, f, indent=4)
    f.truncate()

print(response.choices[0].message.content)
