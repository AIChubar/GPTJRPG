import openai
import os
import json


model_param = "gpt-4o"
temperature_param = 0.6

with open('structure_unit_data.json', 'r') as file:
    structure_content = file.read()

with open('units.json', 'r') as file:
    units_content = file.read()


with open('current_world.json', 'r') as file:
    current_world_data = json.load(file)
    
with open('units_stats.json', 'r') as file:
    units_stats_content = file.read()
    
current_world_name = current_world_data["worldName"]
world_folder_path = os.path.join(os.pardir, "Worlds", current_world_name)

with open(os.path.join(world_folder_path, "Narrative.json"), "r") as file:
    narrative_content = file.read()
with open(os.path.join(world_folder_path, "Levels.json"), "r") as file:
    levels_content = file.read()
with open(os.path.join(world_folder_path, "MainCharacter.json"), "r") as file:
    main_character_content = file.read()
folder_path = os.path.join(os.pardir, "Worlds")


response = openai.chat.completions.create(
    model=model_param,
    temperature=temperature_param,
    max_tokens=4096,
    response_format={"type": "json_object"},
    messages=[
        {
            "role": "system",
            "content": "#Setting: \n You are a creative assistant for creating textual game content for the created fantasy game world. You need to follow instructions while being creative and artistic. \n"
                       "#Instructions: \n "
                       "Your task is to generate units for enemy groups. "
                       "You should base your choice on existing world, main protagonist, and levels description \n" + narrative_content + "\n" + main_character_content + "\n" + levels_content + "\n" 
                       "Units should be generated by at first choosing the first attribute of each unit, which should be picked from outer objects names from 'units content' JSON file.\n"
                       "After that you should pick the second attribute that is defined by the name of the list inside first attribute object in 'units content' JSON. \n"
                       "The third one is the string in the corresponding to the second attribute list inside the corresponding to the first attribute object. The third attribute can be empty if the only string in the list is empty. \n"
                       "When choosing the attributes for the unit, you should narrow down the given 'units content' data only to the fragment corresponding to the chosen attribute when choosing the next one. \n"
                       "Here is the 'units content' JSON file: \n" + units_content + "\n"
                       "After that generate a characteristic name and base it on your interpretation of the second and the third attributes. It can consist of a few words. \n"
                       "After that generate an artistic name which should be an appropriate for this unit fantasy name. \n"
                       "Assign a power level for each unit based of your own knowledge about the creature, there are 7 different levels of power: feeble, weak, moderate, strong, mighty, formidable, legendary. \n"
                       "You also should assign a class of the unit to it depending on what fits your knowledge about particular fantasy unit. You cannot assign 2 same unit classes for one group. Pick the class type from this 'unit characteristics' JSON file: \n" + units_stats_content + "\n"
                       "There is an average group power (agp) that is the  between the power levels on 1 to 7 scale. Enemy agp on 1st level - 2-3, on 2nd level - 4-5, on 3rd level - 5-6.\n"
                       "Try to use differently powered units to fill the group with the set average power. Never use same three power levels for one group. \n"
                       "Each level should contains four groups of units. At least three unit groups on each level should contain 3 units. Generate an artistic name for each enemy unit group. \n"
                       "Fill the generated content into the appropriate variables in the given JSON structure. \n"
                       "#Constraints: \n"
                       "1. Do not choose the same exact unit attributes combination more than 2 times. \n"
                       "2. You cannot change or transform given units attributes. \n"
                       "3. At least two units in each group should share the same firstAttribute. \n"
                       "4. Artistic name and characteristic name of the same unit should not be similar. \n"
                       "5. Never use the same characteristic or artistic name for two different units. \n"
                       "6. Pick units from different first attributes for different levels. Try to assign enemies that can fit the level description. \n"
                       "7. Prioritize generating at least four unit groups for each level. \n"
                       "#Structure: \n" + structure_content + "\n"
        },
        {
            "role": "user",
            "content": "Start generating."
        }
    ]
)
print(response.choices[0].message.content)

json_result = json.loads(response.choices[-1].message.content)


with open(os.path.join(world_folder_path, "UnitData.json"), 'w') as f:
    json.dump(json_result, f, indent=2)


first_enemies = []

for level in json_result['levelsUnits']:
    for group in level['enemyGroups']:
        first_enemies.append(group['units'][0])
current_world_data["enemiesMain"] = first_enemies

with open('current_world.json', 'w') as f:
    json.dump(current_world_data, f, indent=2)