### YamlMime:ManagedReference
items:
- uid: Global.AbilityIndication
  commentId: T:Global.AbilityIndication
  id: AbilityIndication
  parent: Global
  children:
  - Global.AbilityIndication.SetAbilityIndication(UnityEngine.Sprite)
  - Global.AbilityIndication.SetVisibility(System.Single)
  langs:
  - csharp
  - vb
  name: AbilityIndication
  nameWithType: AbilityIndication
  fullName: AbilityIndication
  type: Class
  source:
    remote:
      path: Assets/Scripts/BattleScripts/AbilityIndication.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: AbilityIndication
    path: ../Assets/Scripts/BattleScripts/AbilityIndication.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nScript that controls object used to indicate who was affected by the <xref href=\"Unit\" data-throw-if-not-resolved=\"false\"></xref> Ability.\n"
  example: []
  syntax:
    content: 'public class AbilityIndication : MonoBehaviour'
    content.vb: Public Class AbilityIndication Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.AbilityIndication.SetAbilityIndication(UnityEngine.Sprite)
  commentId: M:Global.AbilityIndication.SetAbilityIndication(UnityEngine.Sprite)
  id: SetAbilityIndication(UnityEngine.Sprite)
  parent: Global.AbilityIndication
  langs:
  - csharp
  - vb
  name: SetAbilityIndication(Sprite)
  nameWithType: AbilityIndication.SetAbilityIndication(Sprite)
  fullName: AbilityIndication.SetAbilityIndication(UnityEngine.Sprite)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/AbilityIndication.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: SetAbilityIndication
    path: ../Assets/Scripts/BattleScripts/AbilityIndication.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSet the sprite for the current Ability Indication.\n"
  example: []
  syntax:
    content: public void SetAbilityIndication(Sprite sprite)
    parameters:
    - id: sprite
      type: UnityEngine.Sprite
      description: Sprite to be set.
    content.vb: Public Sub SetAbilityIndication(sprite As Sprite)
  overload: Global.AbilityIndication.SetAbilityIndication*
- uid: Global.AbilityIndication.SetVisibility(System.Single)
  commentId: M:Global.AbilityIndication.SetVisibility(System.Single)
  id: SetVisibility(System.Single)
  parent: Global.AbilityIndication
  langs:
  - csharp
  - vb
  name: SetVisibility(float)
  nameWithType: AbilityIndication.SetVisibility(float)
  fullName: AbilityIndication.SetVisibility(float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/AbilityIndication.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: SetVisibility
    path: ../Assets/Scripts/BattleScripts/AbilityIndication.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSets new alpha value for the current Ability Indication.\n"
  example: []
  syntax:
    content: public void SetVisibility(float a)
    parameters:
    - id: a
      type: System.Single
      description: Alpha value to be set.
    content.vb: Public Sub SetVisibility(a As Single)
  overload: Global.AbilityIndication.SetVisibility*
  nameWithType.vb: AbilityIndication.SetVisibility(Single)
  fullName.vb: AbilityIndication.SetVisibility(Single)
  name.vb: SetVisibility(Single)
references:
- uid: Unit
  commentId: T:Unit
  isExternal: true
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.AbilityIndication.SetAbilityIndication*
  commentId: Overload:Global.AbilityIndication.SetAbilityIndication
  name: SetAbilityIndication
  nameWithType: AbilityIndication.SetAbilityIndication
  fullName: AbilityIndication.SetAbilityIndication
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
- uid: Global.AbilityIndication.SetVisibility*
  commentId: Overload:Global.AbilityIndication.SetVisibility
  name: SetVisibility
  nameWithType: AbilityIndication.SetVisibility
  fullName: AbilityIndication.SetVisibility
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
