### YamlMime:ManagedReference
items:
- uid: Global.Unit
  commentId: T:Global.Unit
  id: Unit
  parent: Global
  children:
  - Global.Unit.abilitySprite
  - Global.Unit.armouredUp
  - Global.Unit.ArmourUp
  - Global.Unit.attacksRandomAlly
  - Global.Unit.BeingAttacked(Unit,System.Boolean)
  - Global.Unit.currentSkillCD
  - Global.Unit.deathTime
  - Global.Unit.elusive
  - Global.Unit.isBeingDestroyed
  - Global.Unit.isBoss
  - Global.Unit.SetData(JSONReader.UnitJSON)
  - Global.Unit.skillCD
  - Global.Unit.skillUsedLastTurn
  - Global.Unit.SkipTurn
  - Global.Unit.stunned
  - Global.Unit.TurnStartUpdate(UnityEngine.GameObject)
  - Global.Unit.UnitAbility
  - Global.Unit.unitData
  - Global.Unit.unitType
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: Unit
  fullName: Unit
  type: Class
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: Unit
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nScript that controls and contains the data for an object in a Battle, representing a <xref href=\"JSONReader.UnitJSON\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class Unit : MonoBehaviour'
    content.vb: Public Class Unit Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.Unit.unitType
  commentId: F:Global.Unit.unitType
  id: unitType
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: unitType
  nameWithType: Unit.unitType
  fullName: Unit.unitType
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: unitType
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nThis Unit class.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      [Tooltip("This Unit class.")]

      public Unit.UnitType unitType
    return:
      type: Global.Unit.UnitType
    content.vb: >-
      <HideInInspector>

      <Tooltip("This Unit class.")>

      Public unitType As Unit.UnitType
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: {}
- uid: Global.Unit.unitData
  commentId: F:Global.Unit.unitData
  id: unitData
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: unitData
  nameWithType: Unit.unitData
  fullName: Unit.unitData
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: unitData
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nThis Unit Data.\n"
  example: []
  syntax:
    content: >-
      [Tooltip("This Unit Data.")]

      public JSONReader.UnitJSON unitData
    return:
      type: Global.JSONReader.UnitJSON
    content.vb: >-
      <Tooltip("This Unit Data.")>

      Public unitData As JSONReader.UnitJSON
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: {}
- uid: Global.Unit.armouredUp
  commentId: F:Global.Unit.armouredUp
  id: armouredUp
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: armouredUp
  nameWithType: Unit.armouredUp
  fullName: Unit.armouredUp
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: armouredUp
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nIf more than a 0 unit has an increased armour.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public int armouredUp
    return:
      type: System.Int32
    content.vb: >-
      <HideInInspector>

      Public armouredUp As Integer
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Unit.stunned
  commentId: F:Global.Unit.stunned
  id: stunned
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: stunned
  nameWithType: Unit.stunned
  fullName: Unit.stunned
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: stunned
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nIf more than a 0 unit is stunned and skips the next turn.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public int stunned
    return:
      type: System.Int32
    content.vb: >-
      <HideInInspector>

      Public stunned As Integer
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Unit.attacksRandomAlly
  commentId: F:Global.Unit.attacksRandomAlly
  id: attacksRandomAlly
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: attacksRandomAlly
  nameWithType: Unit.attacksRandomAlly
  fullName: Unit.attacksRandomAlly
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: attacksRandomAlly
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nIf more than a 0 unit attacks another ally unit if it exists.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public int attacksRandomAlly
    return:
      type: System.Int32
    content.vb: >-
      <HideInInspector>

      Public attacksRandomAlly As Integer
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Unit.elusive
  commentId: F:Global.Unit.elusive
  id: elusive
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: elusive
  nameWithType: Unit.elusive
  fullName: Unit.elusive
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: elusive
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nIf more than a 0 unit has 50% to evade damage.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public int elusive
    return:
      type: System.Int32
    content.vb: >-
      <HideInInspector>

      Public elusive As Integer
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Unit.skillUsedLastTurn
  commentId: F:Global.Unit.skillUsedLastTurn
  id: skillUsedLastTurn
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: skillUsedLastTurn
  nameWithType: Unit.skillUsedLastTurn
  fullName: Unit.skillUsedLastTurn
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: skillUsedLastTurn
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 53
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nTrue if this Unit Ability was used last turn.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public bool skillUsedLastTurn
    return:
      type: System.Boolean
    content.vb: >-
      <HideInInspector>

      Public skillUsedLastTurn As Boolean
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Unit.skillCD
  commentId: F:Global.Unit.skillCD
  id: skillCD
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: skillCD
  nameWithType: Unit.skillCD
  fullName: Unit.skillCD
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: skillCD
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nThis Unit Class Ability cooldown.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public int skillCD
    return:
      type: System.Int32
    content.vb: >-
      <HideInInspector>

      Public skillCD As Integer
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Unit.currentSkillCD
  commentId: F:Global.Unit.currentSkillCD
  id: currentSkillCD
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: currentSkillCD
  nameWithType: Unit.currentSkillCD
  fullName: Unit.currentSkillCD
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: currentSkillCD
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 63
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nHow many rounds before the Ability is ready to be used.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public int currentSkillCD
    return:
      type: System.Int32
    content.vb: >-
      <HideInInspector>

      Public currentSkillCD As Integer
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Unit.abilitySprite
  commentId: F:Global.Unit.abilitySprite
  id: abilitySprite
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: abilitySprite
  nameWithType: Unit.abilitySprite
  fullName: Unit.abilitySprite
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: abilitySprite
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 68
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nThis Unit Class Ability sprite.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public Sprite abilitySprite
    return:
      type: UnityEngine.Sprite
    content.vb: >-
      <HideInInspector>

      Public abilitySprite As Sprite
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Unit.isBeingDestroyed
  commentId: F:Global.Unit.isBeingDestroyed
  id: isBeingDestroyed
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: isBeingDestroyed
  nameWithType: Unit.isBeingDestroyed
  fullName: Unit.isBeingDestroyed
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: isBeingDestroyed
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 73
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nIs the Unit is about to be destroyed.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public bool isBeingDestroyed
    return:
      type: System.Boolean
    content.vb: >-
      <HideInInspector>

      Public isBeingDestroyed As Boolean
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Unit.isBoss
  commentId: F:Global.Unit.isBoss
  id: isBoss
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: isBoss
  nameWithType: Unit.isBoss
  fullName: Unit.isBoss
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: isBoss
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 78
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nIf the unit is the main Antagonist.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public bool isBoss
    return:
      type: System.Boolean
    content.vb: >-
      <HideInInspector>

      Public isBoss As Boolean
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Unit.deathTime
  commentId: F:Global.Unit.deathTime
  id: deathTime
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: deathTime
  nameWithType: Unit.deathTime
  fullName: Unit.deathTime
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: deathTime
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 84
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nDuration of the dying animation.\n"
  example: []
  syntax:
    content: >-
      [Tooltip("Duration of the dying animation.")]

      public float deathTime
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Duration of the dying animation.")>

      Public deathTime As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: {}
- uid: Global.Unit.TurnStartUpdate(UnityEngine.GameObject)
  commentId: M:Global.Unit.TurnStartUpdate(UnityEngine.GameObject)
  id: TurnStartUpdate(UnityEngine.GameObject)
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: TurnStartUpdate(GameObject)
  nameWithType: Unit.TurnStartUpdate(GameObject)
  fullName: Unit.TurnStartUpdate(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: TurnStartUpdate
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 90
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nUpdate the Ability Button considering the current Unit <xref href=\"Unit.unitType\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Unit.currentSkillCD\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void TurnStartUpdate(GameObject abilityButton)
    parameters:
    - id: abilityButton
      type: UnityEngine.GameObject
      description: Ability Button that should be updated.
    content.vb: Public Sub TurnStartUpdate(abilityButton As GameObject)
  overload: Global.Unit.TurnStartUpdate*
- uid: Global.Unit.ArmourUp
  commentId: M:Global.Unit.ArmourUp
  id: ArmourUp
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: ArmourUp()
  nameWithType: Unit.ArmourUp()
  fullName: Unit.ArmourUp()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: ArmourUp
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 155
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nIncrease the value of <xref href=\"Unit.armouredUp\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void ArmourUp()
    content.vb: Public Sub ArmourUp()
  overload: Global.Unit.ArmourUp*
- uid: Global.Unit.UnitAbility
  commentId: M:Global.Unit.UnitAbility
  id: UnitAbility
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: UnitAbility()
  nameWithType: Unit.UnitAbility()
  fullName: Unit.UnitAbility()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: UnitAbility
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 176
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when the Ability Button for the current Unit is pressed. Immediately uses the Ability or starts waiting for the target.\n"
  example: []
  syntax:
    content: public IEnumerator UnitAbility()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function UnitAbility() As IEnumerator
  overload: Global.Unit.UnitAbility*
- uid: Global.Unit.SetData(JSONReader.UnitJSON)
  commentId: M:Global.Unit.SetData(JSONReader.UnitJSON)
  id: SetData(JSONReader.UnitJSON)
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: SetData(UnitJSON)
  nameWithType: Unit.SetData(JSONReader.UnitJSON)
  fullName: Unit.SetData(JSONReader.UnitJSON)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: SetData
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 287
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSets up data for this Unit.\n"
  example: []
  syntax:
    content: public void SetData(JSONReader.UnitJSON ud)
    parameters:
    - id: ud
      type: Global.JSONReader.UnitJSON
      description: Data for the current Unit.
    content.vb: Public Sub SetData(ud As JSONReader.UnitJSON)
  overload: Global.Unit.SetData*
- uid: Global.Unit.BeingAttacked(Unit,System.Boolean)
  commentId: M:Global.Unit.BeingAttacked(Unit,System.Boolean)
  id: BeingAttacked(Unit,System.Boolean)
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: BeingAttacked(Unit, bool)
  nameWithType: Unit.BeingAttacked(Unit, bool)
  fullName: Unit.BeingAttacked(Unit, bool)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: BeingAttacked
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 308
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when this unit is attacked.\n"
  example: []
  syntax:
    content: public void BeingAttacked(Unit attackingUnit, bool ignoreArmour = false)
    parameters:
    - id: attackingUnit
      type: Global.Unit
      description: Unit that attacks this one.
    - id: ignoreArmour
      type: System.Boolean
      description: True if armour should be ignored.
    content.vb: Public Sub BeingAttacked(attackingUnit As Unit, ignoreArmour As Boolean = False)
  overload: Global.Unit.BeingAttacked*
  nameWithType.vb: Unit.BeingAttacked(Unit, Boolean)
  fullName.vb: Unit.BeingAttacked(Unit, Boolean)
  name.vb: BeingAttacked(Unit, Boolean)
- uid: Global.Unit.SkipTurn
  commentId: M:Global.Unit.SkipTurn
  id: SkipTurn
  parent: Global.Unit
  langs:
  - csharp
  - vb
  name: SkipTurn()
  nameWithType: Unit.SkipTurn()
  fullName: Unit.SkipTurn()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/Unit.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: SkipTurn
    path: ../Assets/Scripts/BattleScripts/Unit.cs
    startLine: 400
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when Unit skips the turn.\n"
  example: []
  syntax:
    content: public void SkipTurn()
    content.vb: Public Sub SkipTurn()
  overload: Global.Unit.SkipTurn*
references:
- uid: JSONReader.UnitJSON
  commentId: T:JSONReader.UnitJSON
  isExternal: true
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.Unit.UnitType
  commentId: T:Global.Unit.UnitType
  name: Unit.UnitType
  nameWithType: Unit.UnitType
  fullName: Unit.UnitType
  spec.csharp:
  - uid: Global.Unit
    name: Unit
  - name: .
  - uid: Global.Unit.UnitType
    name: UnitType
  spec.vb:
  - uid: Global.Unit
    name: Unit
  - name: .
  - uid: Global.Unit.UnitType
    name: UnitType
- uid: Global.JSONReader.UnitJSON
  commentId: T:Global.JSONReader.UnitJSON
  name: JSONReader.UnitJSON
  nameWithType: JSONReader.UnitJSON
  fullName: JSONReader.UnitJSON
  spec.csharp:
  - uid: Global.JSONReader
    name: JSONReader
  - name: .
  - uid: Global.JSONReader.UnitJSON
    name: UnitJSON
  spec.vb:
  - uid: Global.JSONReader
    name: JSONReader
  - name: .
  - uid: Global.JSONReader.UnitJSON
    name: UnitJSON
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Unit.unitType
  commentId: F:Unit.unitType
  isExternal: true
- uid: Unit.currentSkillCD
  commentId: F:Unit.currentSkillCD
  isExternal: true
- uid: Global.Unit.TurnStartUpdate*
  commentId: Overload:Global.Unit.TurnStartUpdate
  name: TurnStartUpdate
  nameWithType: Unit.TurnStartUpdate
  fullName: Unit.TurnStartUpdate
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Unit.armouredUp
  commentId: F:Unit.armouredUp
  isExternal: true
- uid: Global.Unit.ArmourUp*
  commentId: Overload:Global.Unit.ArmourUp
  name: ArmourUp
  nameWithType: Unit.ArmourUp
  fullName: Unit.ArmourUp
- uid: Global.Unit.UnitAbility*
  commentId: Overload:Global.Unit.UnitAbility
  name: UnitAbility
  nameWithType: Unit.UnitAbility
  fullName: Unit.UnitAbility
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
- uid: Global.Unit.SetData*
  commentId: Overload:Global.Unit.SetData
  name: SetData
  nameWithType: Unit.SetData
  fullName: Unit.SetData
- uid: Global.Unit.BeingAttacked*
  commentId: Overload:Global.Unit.BeingAttacked
  name: BeingAttacked
  nameWithType: Unit.BeingAttacked
  fullName: Unit.BeingAttacked
- uid: Global.Unit
  commentId: T:Global.Unit
  name: Unit
  nameWithType: Unit
  fullName: Unit
- uid: Global.Unit.SkipTurn*
  commentId: Overload:Global.Unit.SkipTurn
  name: SkipTurn
  nameWithType: Unit.SkipTurn
  fullName: Unit.SkipTurn
