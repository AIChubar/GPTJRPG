### YamlMime:ManagedReference
items:
- uid: Global.BattleSystem.BattleState
  commentId: T:Global.BattleSystem.BattleState
  id: BattleSystem.BattleState
  parent: Global
  children:
  - Global.BattleSystem.BattleState.ENEMYTURN
  - Global.BattleSystem.BattleState.LOST
  - Global.BattleSystem.BattleState.PLAYERTURN
  - Global.BattleSystem.BattleState.START
  - Global.BattleSystem.BattleState.WIN
  langs:
  - csharp
  - vb
  name: BattleSystem.BattleState
  nameWithType: BattleSystem.BattleState
  fullName: BattleSystem.BattleState
  type: Enum
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: BattleState
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nState of the current Battle.\n"
  example: []
  syntax:
    content: public enum BattleSystem.BattleState
    content.vb: Public Enum BattleSystem.BattleState
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.BattleSystem.BattleState.START
  commentId: F:Global.BattleSystem.BattleState.START
  id: START
  parent: Global.BattleSystem.BattleState
  langs:
  - csharp
  - vb
  name: START
  nameWithType: BattleSystem.BattleState.START
  fullName: BattleSystem.BattleState.START
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: START
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: START = 0
    return:
      type: Global.BattleSystem.BattleState
- uid: Global.BattleSystem.BattleState.PLAYERTURN
  commentId: F:Global.BattleSystem.BattleState.PLAYERTURN
  id: PLAYERTURN
  parent: Global.BattleSystem.BattleState
  langs:
  - csharp
  - vb
  name: PLAYERTURN
  nameWithType: BattleSystem.BattleState.PLAYERTURN
  fullName: BattleSystem.BattleState.PLAYERTURN
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: PLAYERTURN
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: PLAYERTURN = 1
    return:
      type: Global.BattleSystem.BattleState
- uid: Global.BattleSystem.BattleState.ENEMYTURN
  commentId: F:Global.BattleSystem.BattleState.ENEMYTURN
  id: ENEMYTURN
  parent: Global.BattleSystem.BattleState
  langs:
  - csharp
  - vb
  name: ENEMYTURN
  nameWithType: BattleSystem.BattleState.ENEMYTURN
  fullName: BattleSystem.BattleState.ENEMYTURN
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: ENEMYTURN
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: ENEMYTURN = 2
    return:
      type: Global.BattleSystem.BattleState
- uid: Global.BattleSystem.BattleState.WIN
  commentId: F:Global.BattleSystem.BattleState.WIN
  id: WIN
  parent: Global.BattleSystem.BattleState
  langs:
  - csharp
  - vb
  name: WIN
  nameWithType: BattleSystem.BattleState.WIN
  fullName: BattleSystem.BattleState.WIN
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: WIN
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: WIN = 3
    return:
      type: Global.BattleSystem.BattleState
- uid: Global.BattleSystem.BattleState.LOST
  commentId: F:Global.BattleSystem.BattleState.LOST
  id: LOST
  parent: Global.BattleSystem.BattleState
  langs:
  - csharp
  - vb
  name: LOST
  nameWithType: BattleSystem.BattleState.LOST
  fullName: BattleSystem.BattleState.LOST
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: LOST
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: LOST = 4
    return:
      type: Global.BattleSystem.BattleState
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.BattleSystem.BattleState
  commentId: T:Global.BattleSystem.BattleState
  name: BattleSystem.BattleState
  nameWithType: BattleSystem.BattleState
  fullName: BattleSystem.BattleState
  spec.csharp:
  - uid: Global.BattleSystem
    name: BattleSystem
  - name: .
  - uid: Global.BattleSystem.BattleState
    name: BattleState
  spec.vb:
  - uid: Global.BattleSystem
    name: BattleSystem
  - name: .
  - uid: Global.BattleSystem.BattleState
    name: BattleState
