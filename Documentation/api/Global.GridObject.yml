### YamlMime:ManagedReference
items:
- uid: Global.GridObject
  commentId: T:Global.GridObject
  id: GridObject
  parent: Global
  children:
  - Global.GridObject.AssignObject(UnityEngine.GameObject,JSONReader.UnitJSON)
  - Global.GridObject.objectHolding
  langs:
  - csharp
  - vb
  name: GridObject
  nameWithType: GridObject
  fullName: GridObject
  type: Class
  source:
    remote:
      path: Assets/Scripts/BattleScripts/GridObject.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: GridObject
    path: ../Assets/Scripts/BattleScripts/GridObject.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nScript for the Grid Tile.\n"
  example: []
  syntax:
    content: 'public class GridObject : MonoBehaviour'
    content.vb: Public Class GridObject Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.GridObject.objectHolding
  commentId: F:Global.GridObject.objectHolding
  id: objectHolding
  parent: Global.GridObject
  langs:
  - csharp
  - vb
  name: objectHolding
  nameWithType: GridObject.objectHolding
  fullName: GridObject.objectHolding
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/GridObject.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: objectHolding
    path: ../Assets/Scripts/BattleScripts/GridObject.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nObject that is being hold by this Grid Tile.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      [SerializeField]

      public GameObject objectHolding
    return:
      type: UnityEngine.GameObject
    content.vb: >-
      <HideInInspector>

      <SerializeField>

      Public objectHolding As GameObject
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.GridObject.AssignObject(UnityEngine.GameObject,JSONReader.UnitJSON)
  commentId: M:Global.GridObject.AssignObject(UnityEngine.GameObject,JSONReader.UnitJSON)
  id: AssignObject(UnityEngine.GameObject,JSONReader.UnitJSON)
  parent: Global.GridObject
  langs:
  - csharp
  - vb
  name: AssignObject(GameObject, UnitJSON)
  nameWithType: GridObject.AssignObject(GameObject, JSONReader.UnitJSON)
  fullName: GridObject.AssignObject(UnityEngine.GameObject, JSONReader.UnitJSON)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/GridObject.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: AssignObject
    path: ../Assets/Scripts/BattleScripts/GridObject.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nAssign <xref href=\"GridObject.objectHolding\" data-throw-if-not-resolved=\"false\"></xref> for this Grid Tile.\n"
  example: []
  syntax:
    content: public void AssignObject(GameObject pref, JSONReader.UnitJSON ud)
    parameters:
    - id: pref
      type: UnityEngine.GameObject
      description: Prefab for <xref href="Unit" data-throw-if-not-resolved="false"></xref>.
    - id: ud
      type: Global.JSONReader.UnitJSON
      description: Data about the Unit.
    content.vb: Public Sub AssignObject(pref As GameObject, ud As JSONReader.UnitJSON)
  overload: Global.GridObject.AssignObject*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: GridObject.objectHolding
  commentId: F:GridObject.objectHolding
  isExternal: true
- uid: Unit
  commentId: T:Unit
  isExternal: true
- uid: Global.GridObject.AssignObject*
  commentId: Overload:Global.GridObject.AssignObject
  name: AssignObject
  nameWithType: GridObject.AssignObject
  fullName: GridObject.AssignObject
- uid: Global.JSONReader.UnitJSON
  commentId: T:Global.JSONReader.UnitJSON
  name: JSONReader.UnitJSON
  nameWithType: JSONReader.UnitJSON
  fullName: JSONReader.UnitJSON
  spec.csharp:
  - uid: Global.JSONReader
    name: JSONReader
  - name: .
  - uid: Global.JSONReader.UnitJSON
    name: UnitJSON
  spec.vb:
  - uid: Global.JSONReader
    name: JSONReader
  - name: .
  - uid: Global.JSONReader.UnitJSON
    name: UnitJSON
