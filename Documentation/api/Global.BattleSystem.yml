### YamlMime:ManagedReference
items:
- uid: Global.BattleSystem
  commentId: T:Global.BattleSystem
  id: BattleSystem
  parent: Global
  children:
  - Global.BattleSystem.AbilityIndicationAnimations(UnityEngine.Sprite,UnityEngine.Transform[])
  - Global.BattleSystem.allyTauntCaster
  - Global.BattleSystem.CurrentSound
  - Global.BattleSystem.DisableInput
  - Global.BattleSystem.EnableInput
  - Global.BattleSystem.GetAllies
  - Global.BattleSystem.GetCurrentTarget
  - Global.BattleSystem.GetEnemies
  - Global.BattleSystem.OnAbilityButtonPressed
  - Global.BattleSystem.OnAttackButtonPressed
  - Global.BattleSystem.OnDefendButtonPressed
  langs:
  - csharp
  - vb
  name: BattleSystem
  nameWithType: BattleSystem
  fullName: BattleSystem
  type: Class
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: BattleSystem
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nScript that manages the Battle. Contains data about the Units participating in a Battle and references to UI elements.\n"
  example: []
  syntax:
    content: 'public class BattleSystem : MonoBehaviour'
    content.vb: Public Class BattleSystem Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.BattleSystem.allyTauntCaster
  commentId: F:Global.BattleSystem.allyTauntCaster
  id: allyTauntCaster
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: allyTauntCaster
  nameWithType: BattleSystem.allyTauntCaster
  fullName: BattleSystem.allyTauntCaster
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: allyTauntCaster
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nIf not null, contains the Unit Object that currently forcing enemies to attack it.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      [Tooltip("If not null, contains the Unit Object that currently forcing enemies to attack it.")]

      public GameObject allyTauntCaster
    return:
      type: UnityEngine.GameObject
    content.vb: >-
      <HideInInspector>

      <Tooltip("If not null, contains the Unit Object that currently forcing enemies to attack it.")>

      Public allyTauntCaster As GameObject
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: {}
- uid: Global.BattleSystem.GetCurrentTarget
  commentId: M:Global.BattleSystem.GetCurrentTarget
  id: GetCurrentTarget
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: GetCurrentTarget()
  nameWithType: BattleSystem.GetCurrentTarget()
  fullName: BattleSystem.GetCurrentTarget()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: GetCurrentTarget
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 49
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nReturns currently selected target.\n"
  example: []
  syntax:
    content: public GameObject GetCurrentTarget()
    return:
      type: UnityEngine.GameObject
    content.vb: Public Function GetCurrentTarget() As GameObject
  overload: Global.BattleSystem.GetCurrentTarget*
- uid: Global.BattleSystem.GetAllies
  commentId: M:Global.BattleSystem.GetAllies
  id: GetAllies
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: GetAllies()
  nameWithType: BattleSystem.GetAllies()
  fullName: BattleSystem.GetAllies()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: GetAllies
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 65
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nGet the list of ally Units.\n"
  example: []
  syntax:
    content: public List<GameObject> GetAllies()
    return:
      type: System.Collections.Generic.List{UnityEngine.GameObject}
    content.vb: Public Function GetAllies() As List(Of GameObject)
  overload: Global.BattleSystem.GetAllies*
- uid: Global.BattleSystem.GetEnemies
  commentId: M:Global.BattleSystem.GetEnemies
  id: GetEnemies
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: GetEnemies()
  nameWithType: BattleSystem.GetEnemies()
  fullName: BattleSystem.GetEnemies()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: GetEnemies
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nGet the list of enemy Units.\n"
  example: []
  syntax:
    content: public List<GameObject> GetEnemies()
    return:
      type: System.Collections.Generic.List{UnityEngine.GameObject}
    content.vb: Public Function GetEnemies() As List(Of GameObject)
  overload: Global.BattleSystem.GetEnemies*
- uid: Global.BattleSystem.CurrentSound
  commentId: F:Global.BattleSystem.CurrentSound
  id: CurrentSound
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: CurrentSound
  nameWithType: BattleSystem.CurrentSound
  fullName: BattleSystem.CurrentSound
  type: Field
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: CurrentSound
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 94
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSound of the current Unit Class Ability.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      [Tooltip("Sound of the current Unit Class Ability.")]

      public Sound CurrentSound
    return:
      type: Global.Sound
    content.vb: >-
      <HideInInspector>

      <Tooltip("Sound of the current Unit Class Ability.")>

      Public CurrentSound As Sound
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: {}
- uid: Global.BattleSystem.OnAttackButtonPressed
  commentId: M:Global.BattleSystem.OnAttackButtonPressed
  id: OnAttackButtonPressed
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: OnAttackButtonPressed()
  nameWithType: BattleSystem.OnAttackButtonPressed()
  fullName: BattleSystem.OnAttackButtonPressed()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: OnAttackButtonPressed
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 193
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when attack button is pressed. Waits for the target to be attacked. Assigns the <xref href=\"BattleSystem.PlayerAttack\" data-throw-if-not-resolved=\"false\"></xref> as an <xref href=\"BattleSystem._action\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void OnAttackButtonPressed()
    content.vb: Public Sub OnAttackButtonPressed()
  overload: Global.BattleSystem.OnAttackButtonPressed*
- uid: Global.BattleSystem.OnDefendButtonPressed
  commentId: M:Global.BattleSystem.OnDefendButtonPressed
  id: OnDefendButtonPressed
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: OnDefendButtonPressed()
  nameWithType: BattleSystem.OnDefendButtonPressed()
  fullName: BattleSystem.OnDefendButtonPressed()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: OnDefendButtonPressed
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 209
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when defend button is pressed. Assigns the <xref href=\"BattleSystem.PlayerDefend\" data-throw-if-not-resolved=\"false\"></xref> as an <xref href=\"BattleSystem._action\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void OnDefendButtonPressed()
    content.vb: Public Sub OnDefendButtonPressed()
  overload: Global.BattleSystem.OnDefendButtonPressed*
- uid: Global.BattleSystem.OnAbilityButtonPressed
  commentId: M:Global.BattleSystem.OnAbilityButtonPressed
  id: OnAbilityButtonPressed
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: OnAbilityButtonPressed()
  nameWithType: BattleSystem.OnAbilityButtonPressed()
  fullName: BattleSystem.OnAbilityButtonPressed()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: OnAbilityButtonPressed
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 226
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when defend button is pressed. Assigns the <xref href=\"BattleSystem.PlayerAbility\" data-throw-if-not-resolved=\"false\"></xref> as an <xref href=\"BattleSystem._action\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void OnAbilityButtonPressed()
    content.vb: Public Sub OnAbilityButtonPressed()
  overload: Global.BattleSystem.OnAbilityButtonPressed*
- uid: Global.BattleSystem.AbilityIndicationAnimations(UnityEngine.Sprite,UnityEngine.Transform[])
  commentId: M:Global.BattleSystem.AbilityIndicationAnimations(UnityEngine.Sprite,UnityEngine.Transform[])
  id: AbilityIndicationAnimations(UnityEngine.Sprite,UnityEngine.Transform[])
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: AbilityIndicationAnimations(Sprite, Transform[])
  nameWithType: BattleSystem.AbilityIndicationAnimations(Sprite, Transform[])
  fullName: BattleSystem.AbilityIndicationAnimations(UnityEngine.Sprite, UnityEngine.Transform[])
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: AbilityIndicationAnimations
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 378
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSets up the Ability Indication for the used Class Ability.\n"
  example: []
  syntax:
    content: public IEnumerator AbilityIndicationAnimations(Sprite sprite, Transform[] targets)
    parameters:
    - id: sprite
      type: UnityEngine.Sprite
      description: Sprite for the <xref href="AbilityIndication" data-throw-if-not-resolved="false"></xref>.
    - id: targets
      type: UnityEngine.Transform[]
      description: Targets for the current Unit Ability.
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Function AbilityIndicationAnimations(sprite As Sprite, targets As Transform()) As IEnumerator
  overload: Global.BattleSystem.AbilityIndicationAnimations*
  nameWithType.vb: BattleSystem.AbilityIndicationAnimations(Sprite, Transform())
  fullName.vb: BattleSystem.AbilityIndicationAnimations(UnityEngine.Sprite, UnityEngine.Transform())
  name.vb: AbilityIndicationAnimations(Sprite, Transform())
- uid: Global.BattleSystem.DisableInput
  commentId: M:Global.BattleSystem.DisableInput
  id: DisableInput
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: DisableInput()
  nameWithType: BattleSystem.DisableInput()
  fullName: BattleSystem.DisableInput()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: DisableInput
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 539
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nDisables all Unit Buttons.\n"
  example: []
  syntax:
    content: public void DisableInput()
    content.vb: Public Sub DisableInput()
  overload: Global.BattleSystem.DisableInput*
- uid: Global.BattleSystem.EnableInput
  commentId: M:Global.BattleSystem.EnableInput
  id: EnableInput
  parent: Global.BattleSystem
  langs:
  - csharp
  - vb
  name: EnableInput()
  nameWithType: BattleSystem.EnableInput()
  fullName: BattleSystem.EnableInput()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BattleScripts/BattleSystem.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: EnableInput
    path: ../Assets/Scripts/BattleScripts/BattleSystem.cs
    startLine: 548
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nEnables all Unit Buttons.\n"
  example: []
  syntax:
    content: public void EnableInput()
    content.vb: Public Sub EnableInput()
  overload: Global.BattleSystem.EnableInput*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.BattleSystem.GetCurrentTarget*
  commentId: Overload:Global.BattleSystem.GetCurrentTarget
  name: GetCurrentTarget
  nameWithType: BattleSystem.GetCurrentTarget
  fullName: BattleSystem.GetCurrentTarget
- uid: Global.BattleSystem.GetAllies*
  commentId: Overload:Global.BattleSystem.GetAllies
  name: GetAllies
  nameWithType: BattleSystem.GetAllies
  fullName: BattleSystem.GetAllies
- uid: System.Collections.Generic.List{UnityEngine.GameObject}
  commentId: T:System.Collections.Generic.List{UnityEngine.GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: System.Collections.Generic.List<UnityEngine.GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.BattleSystem.GetEnemies*
  commentId: Overload:Global.BattleSystem.GetEnemies
  name: GetEnemies
  nameWithType: BattleSystem.GetEnemies
  fullName: BattleSystem.GetEnemies
- uid: Global.Sound
  commentId: T:Global.Sound
  name: Sound
  nameWithType: Sound
  fullName: Sound
- uid: BattleSystem.PlayerAttack
  commentId: M:BattleSystem.PlayerAttack
  isExternal: true
- uid: BattleSystem._action
  commentId: F:BattleSystem._action
  isExternal: true
- uid: Global.BattleSystem.OnAttackButtonPressed*
  commentId: Overload:Global.BattleSystem.OnAttackButtonPressed
  name: OnAttackButtonPressed
  nameWithType: BattleSystem.OnAttackButtonPressed
  fullName: BattleSystem.OnAttackButtonPressed
- uid: BattleSystem.PlayerDefend
  commentId: M:BattleSystem.PlayerDefend
  isExternal: true
- uid: Global.BattleSystem.OnDefendButtonPressed*
  commentId: Overload:Global.BattleSystem.OnDefendButtonPressed
  name: OnDefendButtonPressed
  nameWithType: BattleSystem.OnDefendButtonPressed
  fullName: BattleSystem.OnDefendButtonPressed
- uid: BattleSystem.PlayerAbility
  commentId: M:BattleSystem.PlayerAbility
  isExternal: true
- uid: Global.BattleSystem.OnAbilityButtonPressed*
  commentId: Overload:Global.BattleSystem.OnAbilityButtonPressed
  name: OnAbilityButtonPressed
  nameWithType: BattleSystem.OnAbilityButtonPressed
  fullName: BattleSystem.OnAbilityButtonPressed
- uid: AbilityIndication
  commentId: T:AbilityIndication
  isExternal: true
- uid: Global.BattleSystem.AbilityIndicationAnimations*
  commentId: Overload:Global.BattleSystem.AbilityIndicationAnimations
  name: AbilityIndicationAnimations
  nameWithType: BattleSystem.AbilityIndicationAnimations
  fullName: BattleSystem.AbilityIndicationAnimations
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
- uid: UnityEngine.Transform[]
  isExternal: true
  name: Transform[]
  nameWithType: Transform[]
  fullName: UnityEngine.Transform[]
  nameWithType.vb: Transform()
  fullName.vb: UnityEngine.Transform()
  name.vb: Transform()
  spec.csharp:
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: (
  - name: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
- uid: Global.BattleSystem.DisableInput*
  commentId: Overload:Global.BattleSystem.DisableInput
  name: DisableInput
  nameWithType: BattleSystem.DisableInput
  fullName: BattleSystem.DisableInput
- uid: Global.BattleSystem.EnableInput*
  commentId: Overload:Global.BattleSystem.EnableInput
  name: EnableInput
  nameWithType: BattleSystem.EnableInput
  fullName: BattleSystem.EnableInput
