### YamlMime:ManagedReference
items:
- uid: Global.WorldButton
  commentId: T:Global.WorldButton
  id: WorldButton
  parent: Global
  children:
  - Global.WorldButton.ButtonClick
  - Global.WorldButton.DeleteWorld
  - Global.WorldButton.folderName
  - Global.WorldButton.image
  - Global.WorldButton.OnClicked
  - Global.WorldButton.SetButton(System.String)
  - Global.WorldButton.worldName
  langs:
  - csharp
  - vb
  name: WorldButton
  nameWithType: WorldButton
  fullName: WorldButton
  type: Class
  source:
    remote:
      path: Assets/Scripts/MainMenuScripts/WorldButton.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: WorldButton
    path: ../Assets/Scripts/MainMenuScripts/WorldButton.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nScript for the UI element representing the Game World Button.\n"
  example: []
  syntax:
    content: 'public class WorldButton : MonoBehaviour'
    content.vb: Public Class WorldButton Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.WorldButton.worldName
  commentId: F:Global.WorldButton.worldName
  id: worldName
  parent: Global.WorldButton
  langs:
  - csharp
  - vb
  name: worldName
  nameWithType: WorldButton.worldName
  fullName: WorldButton.worldName
  type: Field
  source:
    remote:
      path: Assets/Scripts/MainMenuScripts/WorldButton.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: worldName
    path: ../Assets/Scripts/MainMenuScripts/WorldButton.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nName of the Game World represented by this button.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      [Tooltip("Name of the Game World represented by this button.")]

      public TextMeshProUGUI worldName
    return:
      type: TMPro.TextMeshProUGUI
    content.vb: >-
      <HideInInspector>

      <Tooltip("Name of the Game World represented by this button.")>

      Public worldName As TextMeshProUGUI
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: {}
- uid: Global.WorldButton.folderName
  commentId: F:Global.WorldButton.folderName
  id: folderName
  parent: Global.WorldButton
  langs:
  - csharp
  - vb
  name: folderName
  nameWithType: WorldButton.folderName
  fullName: WorldButton.folderName
  type: Field
  source:
    remote:
      path: Assets/Scripts/MainMenuScripts/WorldButton.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: folderName
    path: ../Assets/Scripts/MainMenuScripts/WorldButton.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nName of the folder containing JSON representation of the Game World.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public string folderName
    return:
      type: System.String
    content.vb: >-
      <HideInInspector>

      Public folderName As String
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.WorldButton.image
  commentId: F:Global.WorldButton.image
  id: image
  parent: Global.WorldButton
  langs:
  - csharp
  - vb
  name: image
  nameWithType: WorldButton.image
  fullName: WorldButton.image
  type: Field
  source:
    remote:
      path: Assets/Scripts/MainMenuScripts/WorldButton.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: image
    path: ../Assets/Scripts/MainMenuScripts/WorldButton.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nImage for the button that is calling the deleting interface.\n"
  example: []
  syntax:
    content: >-
      [HideInInspector]

      public Image image
    return:
      type: UnityEngine.UI.Image
    content.vb: >-
      <HideInInspector>

      Public image As Image
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.WorldButton.ButtonClick
  commentId: F:Global.WorldButton.ButtonClick
  id: ButtonClick
  parent: Global.WorldButton
  langs:
  - csharp
  - vb
  name: ButtonClick
  nameWithType: WorldButton.ButtonClick
  fullName: WorldButton.ButtonClick
  type: Field
  source:
    remote:
      path: Assets/Scripts/MainMenuScripts/WorldButton.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: ButtonClick
    path: ../Assets/Scripts/MainMenuScripts/WorldButton.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSound that is being played when the button is clicked.\n"
  example: []
  syntax:
    content: >-
      [Dropdown("AudioManager.Instance.Sounds", "Name")]

      [Tooltip("Sound that is being played when the button is clicked.")]

      public Sound ButtonClick
    return:
      type: Global.Sound
    content.vb: >-
      <Dropdown("AudioManager.Instance.Sounds", "Name")>

      <Tooltip("Sound that is being played when the button is clicked.")>

      Public ButtonClick As Sound
  attributes:
  - type: Global.DropdownAttribute
    ctor: Global.DropdownAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: {}
    - type: System.String
      value: {}
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: {}
- uid: Global.WorldButton.OnClicked
  commentId: M:Global.WorldButton.OnClicked
  id: OnClicked
  parent: Global.WorldButton
  langs:
  - csharp
  - vb
  name: OnClicked()
  nameWithType: WorldButton.OnClicked()
  fullName: WorldButton.OnClicked()
  type: Method
  source:
    remote:
      path: Assets/Scripts/MainMenuScripts/WorldButton.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: OnClicked
    path: ../Assets/Scripts/MainMenuScripts/WorldButton.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when this Game World Button is clicked. Sets the new current game world and changes the color of the button.\n"
  example: []
  syntax:
    content: public void OnClicked()
    content.vb: Public Sub OnClicked()
  overload: Global.WorldButton.OnClicked*
- uid: Global.WorldButton.SetButton(System.String)
  commentId: M:Global.WorldButton.SetButton(System.String)
  id: SetButton(System.String)
  parent: Global.WorldButton
  langs:
  - csharp
  - vb
  name: SetButton(string)
  nameWithType: WorldButton.SetButton(string)
  fullName: WorldButton.SetButton(string)
  type: Method
  source:
    remote:
      path: Assets/Scripts/MainMenuScripts/WorldButton.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: SetButton
    path: ../Assets/Scripts/MainMenuScripts/WorldButton.cs
    startLine: 53
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when the button is created.\n"
  example: []
  syntax:
    content: public void SetButton(string fn)
    parameters:
    - id: fn
      type: System.String
      description: Folder name to be parsed.
    content.vb: Public Sub SetButton(fn As String)
  overload: Global.WorldButton.SetButton*
  nameWithType.vb: WorldButton.SetButton(String)
  fullName.vb: WorldButton.SetButton(String)
  name.vb: SetButton(String)
- uid: Global.WorldButton.DeleteWorld
  commentId: M:Global.WorldButton.DeleteWorld
  id: DeleteWorld
  parent: Global.WorldButton
  langs:
  - csharp
  - vb
  name: DeleteWorld()
  nameWithType: WorldButton.DeleteWorld()
  fullName: WorldButton.DeleteWorld()
  type: Method
  source:
    remote:
      path: Assets/Scripts/MainMenuScripts/WorldButton.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: DeleteWorld
    path: ../Assets/Scripts/MainMenuScripts/WorldButton.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when the delete part of the Game World Button is clicked.\n"
  example: []
  syntax:
    content: public void DeleteWorld()
    content.vb: Public Sub DeleteWorld()
  overload: Global.WorldButton.DeleteWorld*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: TMPro.TextMeshProUGUI
  commentId: T:TMPro.TextMeshProUGUI
  parent: TMPro
  isExternal: true
  name: TextMeshProUGUI
  nameWithType: TextMeshProUGUI
  fullName: TMPro.TextMeshProUGUI
- uid: TMPro
  commentId: N:TMPro
  isExternal: true
  name: TMPro
  nameWithType: TMPro
  fullName: TMPro
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.UI.Image
  commentId: T:UnityEngine.UI.Image
  parent: UnityEngine.UI
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: UnityEngine.UI.Image
- uid: UnityEngine.UI
  commentId: N:UnityEngine.UI
  isExternal: true
  name: UnityEngine.UI
  nameWithType: UnityEngine.UI
  fullName: UnityEngine.UI
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.UI
    name: UI
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.UI
    name: UI
    isExternal: true
- uid: Global.Sound
  commentId: T:Global.Sound
  name: Sound
  nameWithType: Sound
  fullName: Sound
- uid: Global.WorldButton.OnClicked*
  commentId: Overload:Global.WorldButton.OnClicked
  name: OnClicked
  nameWithType: WorldButton.OnClicked
  fullName: WorldButton.OnClicked
- uid: Global.WorldButton.SetButton*
  commentId: Overload:Global.WorldButton.SetButton
  name: SetButton
  nameWithType: WorldButton.SetButton
  fullName: WorldButton.SetButton
- uid: Global.WorldButton.DeleteWorld*
  commentId: Overload:Global.WorldButton.DeleteWorld
  name: DeleteWorld
  nameWithType: WorldButton.DeleteWorld
  fullName: WorldButton.DeleteWorld
