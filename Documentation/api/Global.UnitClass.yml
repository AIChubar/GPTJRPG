### YamlMime:ManagedReference
items:
- uid: Global.UnitClass
  commentId: T:Global.UnitClass
  id: UnitClass
  parent: Global
  children:
  - Global.UnitClass.#ctor(System.String,System.String,System.String)
  - Global.UnitClass.abilityCooldown
  - Global.UnitClass.abilityDescription
  - Global.UnitClass.className
  langs:
  - csharp
  - vb
  name: UnitClass
  nameWithType: UnitClass
  fullName: UnitClass
  type: Class
  source:
    remote:
      path: Assets/Scripts/Tools/GameManager.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: UnitClass
    path: ../Assets/Scripts/Tools/GameManager.cs
    startLine: 305
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class UnitClass
    content.vb: >-
      <Serializable>

      Public Class UnitClass
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.UnitClass.className
  commentId: F:Global.UnitClass.className
  id: className
  parent: Global.UnitClass
  langs:
  - csharp
  - vb
  name: className
  nameWithType: UnitClass.className
  fullName: UnitClass.className
  type: Field
  source:
    remote:
      path: Assets/Scripts/Tools/GameManager.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: className
    path: ../Assets/Scripts/Tools/GameManager.cs
    startLine: 308
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string className
    return:
      type: System.String
    content.vb: Public className As String
- uid: Global.UnitClass.abilityDescription
  commentId: F:Global.UnitClass.abilityDescription
  id: abilityDescription
  parent: Global.UnitClass
  langs:
  - csharp
  - vb
  name: abilityDescription
  nameWithType: UnitClass.abilityDescription
  fullName: UnitClass.abilityDescription
  type: Field
  source:
    remote:
      path: Assets/Scripts/Tools/GameManager.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: abilityDescription
    path: ../Assets/Scripts/Tools/GameManager.cs
    startLine: 309
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string abilityDescription
    return:
      type: System.String
    content.vb: Public abilityDescription As String
- uid: Global.UnitClass.abilityCooldown
  commentId: F:Global.UnitClass.abilityCooldown
  id: abilityCooldown
  parent: Global.UnitClass
  langs:
  - csharp
  - vb
  name: abilityCooldown
  nameWithType: UnitClass.abilityCooldown
  fullName: UnitClass.abilityCooldown
  type: Field
  source:
    remote:
      path: Assets/Scripts/Tools/GameManager.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: abilityCooldown
    path: ../Assets/Scripts/Tools/GameManager.cs
    startLine: 310
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string abilityCooldown
    return:
      type: System.String
    content.vb: Public abilityCooldown As String
- uid: Global.UnitClass.#ctor(System.String,System.String,System.String)
  commentId: M:Global.UnitClass.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Global.UnitClass
  langs:
  - csharp
  - vb
  name: UnitClass(string, string, string)
  nameWithType: UnitClass.UnitClass(string, string, string)
  fullName: UnitClass.UnitClass(string, string, string)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/Tools/GameManager.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: .ctor
    path: ../Assets/Scripts/Tools/GameManager.cs
    startLine: 312
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public UnitClass(string n, string d, string c)
    parameters:
    - id: n
      type: System.String
    - id: d
      type: System.String
    - id: c
      type: System.String
    content.vb: Public Sub New(n As String, d As String, c As String)
  overload: Global.UnitClass.#ctor*
  nameWithType.vb: UnitClass.New(String, String, String)
  fullName.vb: UnitClass.New(String, String, String)
  name.vb: New(String, String, String)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.UnitClass.#ctor*
  commentId: Overload:Global.UnitClass.#ctor
  name: UnitClass
  nameWithType: UnitClass.UnitClass
  fullName: UnitClass.UnitClass
  nameWithType.vb: UnitClass.New
  fullName.vb: UnitClass.New
  name.vb: New
