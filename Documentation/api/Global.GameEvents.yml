### YamlMime:ManagedReference
items:
- uid: Global.GameEvents
  commentId: T:Global.GameEvents
  id: GameEvents
  parent: Global
  children:
  - Global.GameEvents.gameEvents
  - Global.GameEvents.OnUnitHPChanged
  - Global.GameEvents.OnUnitIgnored
  - Global.GameEvents.OnUnitKilled
  - Global.GameEvents.OnUnitUnited
  - Global.GameEvents.UnitHPChanged(Unit)
  - Global.GameEvents.UnitIgnored(JSONReader.UnitJSON)
  - Global.GameEvents.UnitKilled(Unit)
  - Global.GameEvents.UnitUnited(JSONReader.UnitJSON)
  langs:
  - csharp
  - vb
  name: GameEvents
  nameWithType: GameEvents
  fullName: GameEvents
  type: Class
  source:
    remote:
      path: Assets/Scripts/Tools/GameEvents.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: GameEvents
    path: ../Assets/Scripts/Tools/GameEvents.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nClass containing all events in the game.\n"
  example: []
  syntax:
    content: 'public class GameEvents : MonoBehaviour'
    content.vb: Public Class GameEvents Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.GameEvents.gameEvents
  commentId: F:Global.GameEvents.gameEvents
  id: gameEvents
  parent: Global.GameEvents
  langs:
  - csharp
  - vb
  name: gameEvents
  nameWithType: GameEvents.gameEvents
  fullName: GameEvents.gameEvents
  type: Field
  source:
    remote:
      path: Assets/Scripts/Tools/GameEvents.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: gameEvents
    path: ../Assets/Scripts/Tools/GameEvents.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCurrent static instance of the class.\n"
  example: []
  syntax:
    content: public static GameEvents gameEvents
    return:
      type: Global.GameEvents
    content.vb: Public Shared gameEvents As GameEvents
- uid: Global.GameEvents.OnUnitKilled
  commentId: E:Global.GameEvents.OnUnitKilled
  id: OnUnitKilled
  parent: Global.GameEvents
  langs:
  - csharp
  - vb
  name: OnUnitKilled
  nameWithType: GameEvents.OnUnitKilled
  fullName: GameEvents.OnUnitKilled
  type: Event
  source:
    remote:
      path: Assets/Scripts/Tools/GameEvents.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: OnUnitKilled
    path: ../Assets/Scripts/Tools/GameEvents.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when the Unit is being destroyed.\n"
  example: []
  syntax:
    content: public event Action<Unit> OnUnitKilled
    return:
      type: System.Action{Unit}
    content.vb: Public Event OnUnitKilled As Action(Of Unit)
- uid: Global.GameEvents.OnUnitUnited
  commentId: E:Global.GameEvents.OnUnitUnited
  id: OnUnitUnited
  parent: Global.GameEvents
  langs:
  - csharp
  - vb
  name: OnUnitUnited
  nameWithType: GameEvents.OnUnitUnited
  fullName: GameEvents.OnUnitUnited
  type: Event
  source:
    remote:
      path: Assets/Scripts/Tools/GameEvents.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: OnUnitUnited
    path: ../Assets/Scripts/Tools/GameEvents.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when the option to unite with a World Enemy is chosen as the Dialogue Outcome.\n"
  example: []
  syntax:
    content: public event Action<JSONReader.UnitJSON> OnUnitUnited
    return:
      type: System.Action{JSONReader.UnitJSON}
    content.vb: Public Event OnUnitUnited As Action(Of JSONReader.UnitJSON)
- uid: Global.GameEvents.OnUnitIgnored
  commentId: E:Global.GameEvents.OnUnitIgnored
  id: OnUnitIgnored
  parent: Global.GameEvents
  langs:
  - csharp
  - vb
  name: OnUnitIgnored
  nameWithType: GameEvents.OnUnitIgnored
  fullName: GameEvents.OnUnitIgnored
  type: Event
  source:
    remote:
      path: Assets/Scripts/Tools/GameEvents.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: OnUnitIgnored
    path: ../Assets/Scripts/Tools/GameEvents.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when the option to unite with a World Enemy is chosen as the Dialogue Outcome.\n"
  example: []
  syntax:
    content: public event Action<JSONReader.UnitJSON> OnUnitIgnored
    return:
      type: System.Action{JSONReader.UnitJSON}
    content.vb: Public Event OnUnitIgnored As Action(Of JSONReader.UnitJSON)
- uid: Global.GameEvents.OnUnitHPChanged
  commentId: E:Global.GameEvents.OnUnitHPChanged
  id: OnUnitHPChanged
  parent: Global.GameEvents
  langs:
  - csharp
  - vb
  name: OnUnitHPChanged
  nameWithType: GameEvents.OnUnitHPChanged
  fullName: GameEvents.OnUnitHPChanged
  type: Event
  source:
    remote:
      path: Assets/Scripts/Tools/GameEvents.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: OnUnitHPChanged
    path: ../Assets/Scripts/Tools/GameEvents.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCalled when unit receives damage.\n"
  example: []
  syntax:
    content: public event Action<Unit> OnUnitHPChanged
    return:
      type: System.Action{Unit}
    content.vb: Public Event OnUnitHPChanged As Action(Of Unit)
- uid: Global.GameEvents.UnitKilled(Unit)
  commentId: M:Global.GameEvents.UnitKilled(Unit)
  id: UnitKilled(Unit)
  parent: Global.GameEvents
  langs:
  - csharp
  - vb
  name: UnitKilled(Unit)
  nameWithType: GameEvents.UnitKilled(Unit)
  fullName: GameEvents.UnitKilled(Unit)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Tools/GameEvents.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: UnitKilled
    path: ../Assets/Scripts/Tools/GameEvents.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnitKilled(Unit unit)
    parameters:
    - id: unit
      type: Global.Unit
    content.vb: Public Sub UnitKilled(unit As Unit)
  overload: Global.GameEvents.UnitKilled*
- uid: Global.GameEvents.UnitUnited(JSONReader.UnitJSON)
  commentId: M:Global.GameEvents.UnitUnited(JSONReader.UnitJSON)
  id: UnitUnited(JSONReader.UnitJSON)
  parent: Global.GameEvents
  langs:
  - csharp
  - vb
  name: UnitUnited(UnitJSON)
  nameWithType: GameEvents.UnitUnited(JSONReader.UnitJSON)
  fullName: GameEvents.UnitUnited(JSONReader.UnitJSON)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Tools/GameEvents.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: UnitUnited
    path: ../Assets/Scripts/Tools/GameEvents.cs
    startLine: 45
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnitUnited(JSONReader.UnitJSON unit)
    parameters:
    - id: unit
      type: Global.JSONReader.UnitJSON
    content.vb: Public Sub UnitUnited(unit As JSONReader.UnitJSON)
  overload: Global.GameEvents.UnitUnited*
- uid: Global.GameEvents.UnitIgnored(JSONReader.UnitJSON)
  commentId: M:Global.GameEvents.UnitIgnored(JSONReader.UnitJSON)
  id: UnitIgnored(JSONReader.UnitJSON)
  parent: Global.GameEvents
  langs:
  - csharp
  - vb
  name: UnitIgnored(UnitJSON)
  nameWithType: GameEvents.UnitIgnored(JSONReader.UnitJSON)
  fullName: GameEvents.UnitIgnored(JSONReader.UnitJSON)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Tools/GameEvents.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: UnitIgnored
    path: ../Assets/Scripts/Tools/GameEvents.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnitIgnored(JSONReader.UnitJSON unit)
    parameters:
    - id: unit
      type: Global.JSONReader.UnitJSON
    content.vb: Public Sub UnitIgnored(unit As JSONReader.UnitJSON)
  overload: Global.GameEvents.UnitIgnored*
- uid: Global.GameEvents.UnitHPChanged(Unit)
  commentId: M:Global.GameEvents.UnitHPChanged(Unit)
  id: UnitHPChanged(Unit)
  parent: Global.GameEvents
  langs:
  - csharp
  - vb
  name: UnitHPChanged(Unit)
  nameWithType: GameEvents.UnitHPChanged(Unit)
  fullName: GameEvents.UnitHPChanged(Unit)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Tools/GameEvents.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: UnitHPChanged
    path: ../Assets/Scripts/Tools/GameEvents.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnitHPChanged(Unit unit)
    parameters:
    - id: unit
      type: Global.Unit
    content.vb: Public Sub UnitHPChanged(unit As Unit)
  overload: Global.GameEvents.UnitHPChanged*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.GameEvents
  commentId: T:Global.GameEvents
  name: GameEvents
  nameWithType: GameEvents
  fullName: GameEvents
- uid: System.Action{Unit}
  commentId: T:System.Action{Unit}
  parent: System
  definition: System.Action`1
  name: Action<Unit>
  nameWithType: Action<Unit>
  fullName: System.Action<Unit>
  nameWithType.vb: Action(Of Unit)
  fullName.vb: System.Action(Of Unit)
  name.vb: Action(Of Unit)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: Global.Unit
    name: Unit
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Unit
    name: Unit
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action{JSONReader.UnitJSON}
  commentId: T:System.Action{JSONReader.UnitJSON}
  parent: System
  definition: System.Action`1
  name: Action<JSONReader.UnitJSON>
  nameWithType: Action<JSONReader.UnitJSON>
  fullName: System.Action<JSONReader.UnitJSON>
  nameWithType.vb: Action(Of JSONReader.UnitJSON)
  fullName.vb: System.Action(Of JSONReader.UnitJSON)
  name.vb: Action(Of JSONReader.UnitJSON)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: Global.JSONReader
    name: JSONReader
  - name: .
  - uid: Global.JSONReader.UnitJSON
    name: UnitJSON
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.JSONReader
    name: JSONReader
  - name: .
  - uid: Global.JSONReader.UnitJSON
    name: UnitJSON
  - name: )
- uid: Global.GameEvents.UnitKilled*
  commentId: Overload:Global.GameEvents.UnitKilled
  name: UnitKilled
  nameWithType: GameEvents.UnitKilled
  fullName: GameEvents.UnitKilled
- uid: Global.Unit
  commentId: T:Global.Unit
  name: Unit
  nameWithType: Unit
  fullName: Unit
- uid: Global.GameEvents.UnitUnited*
  commentId: Overload:Global.GameEvents.UnitUnited
  name: UnitUnited
  nameWithType: GameEvents.UnitUnited
  fullName: GameEvents.UnitUnited
- uid: Global.JSONReader.UnitJSON
  commentId: T:Global.JSONReader.UnitJSON
  name: JSONReader.UnitJSON
  nameWithType: JSONReader.UnitJSON
  fullName: JSONReader.UnitJSON
  spec.csharp:
  - uid: Global.JSONReader
    name: JSONReader
  - name: .
  - uid: Global.JSONReader.UnitJSON
    name: UnitJSON
  spec.vb:
  - uid: Global.JSONReader
    name: JSONReader
  - name: .
  - uid: Global.JSONReader.UnitJSON
    name: UnitJSON
- uid: Global.GameEvents.UnitIgnored*
  commentId: Overload:Global.GameEvents.UnitIgnored
  name: UnitIgnored
  nameWithType: GameEvents.UnitIgnored
  fullName: GameEvents.UnitIgnored
- uid: Global.GameEvents.UnitHPChanged*
  commentId: Overload:Global.GameEvents.UnitHPChanged
  name: UnitHPChanged
  nameWithType: GameEvents.UnitHPChanged
  fullName: GameEvents.UnitHPChanged
