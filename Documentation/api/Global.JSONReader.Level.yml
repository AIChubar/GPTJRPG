### YamlMime:ManagedReference
items:
- uid: Global.JSONReader.Level
  commentId: T:Global.JSONReader.Level
  id: JSONReader.Level
  parent: Global
  children:
  - Global.JSONReader.Level.levelDescription
  - Global.JSONReader.Level.levelName
  - Global.JSONReader.Level.obstacleTerrain
  - Global.JSONReader.Level.walkableTerrain
  langs:
  - csharp
  - vb
  name: JSONReader.Level
  nameWithType: JSONReader.Level
  fullName: JSONReader.Level
  type: Class
  source:
    remote:
      path: Assets/Scripts/LevelScripts/JSONReader.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: Level
    path: ../Assets/Scripts/LevelScripts/JSONReader.cs
    startLine: 63
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class JSONReader.Level
    content.vb: >-
      <Serializable>

      Public Class JSONReader.Level
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.JSONReader.Level.levelName
  commentId: F:Global.JSONReader.Level.levelName
  id: levelName
  parent: Global.JSONReader.Level
  langs:
  - csharp
  - vb
  name: levelName
  nameWithType: JSONReader.Level.levelName
  fullName: JSONReader.Level.levelName
  type: Field
  source:
    remote:
      path: Assets/Scripts/LevelScripts/JSONReader.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: levelName
    path: ../Assets/Scripts/LevelScripts/JSONReader.cs
    startLine: 66
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string levelName
    return:
      type: System.String
    content.vb: Public levelName As String
- uid: Global.JSONReader.Level.walkableTerrain
  commentId: F:Global.JSONReader.Level.walkableTerrain
  id: walkableTerrain
  parent: Global.JSONReader.Level
  langs:
  - csharp
  - vb
  name: walkableTerrain
  nameWithType: JSONReader.Level.walkableTerrain
  fullName: JSONReader.Level.walkableTerrain
  type: Field
  source:
    remote:
      path: Assets/Scripts/LevelScripts/JSONReader.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: walkableTerrain
    path: ../Assets/Scripts/LevelScripts/JSONReader.cs
    startLine: 67
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string walkableTerrain
    return:
      type: System.String
    content.vb: Public walkableTerrain As String
- uid: Global.JSONReader.Level.obstacleTerrain
  commentId: F:Global.JSONReader.Level.obstacleTerrain
  id: obstacleTerrain
  parent: Global.JSONReader.Level
  langs:
  - csharp
  - vb
  name: obstacleTerrain
  nameWithType: JSONReader.Level.obstacleTerrain
  fullName: JSONReader.Level.obstacleTerrain
  type: Field
  source:
    remote:
      path: Assets/Scripts/LevelScripts/JSONReader.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: obstacleTerrain
    path: ../Assets/Scripts/LevelScripts/JSONReader.cs
    startLine: 68
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string obstacleTerrain
    return:
      type: System.String
    content.vb: Public obstacleTerrain As String
- uid: Global.JSONReader.Level.levelDescription
  commentId: F:Global.JSONReader.Level.levelDescription
  id: levelDescription
  parent: Global.JSONReader.Level
  langs:
  - csharp
  - vb
  name: levelDescription
  nameWithType: JSONReader.Level.levelDescription
  fullName: JSONReader.Level.levelDescription
  type: Field
  source:
    remote:
      path: Assets/Scripts/LevelScripts/JSONReader.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: levelDescription
    path: ../Assets/Scripts/LevelScripts/JSONReader.cs
    startLine: 69
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string levelDescription
    return:
      type: System.String
    content.vb: Public levelDescription As String
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
