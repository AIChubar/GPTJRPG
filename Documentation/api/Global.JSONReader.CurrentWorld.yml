### YamlMime:ManagedReference
items:
- uid: Global.JSONReader.CurrentWorld
  commentId: T:Global.JSONReader.CurrentWorld
  id: JSONReader.CurrentWorld
  parent: Global
  children:
  - Global.JSONReader.CurrentWorld.enemiesMain
  - Global.JSONReader.CurrentWorld.worldName
  langs:
  - csharp
  - vb
  name: JSONReader.CurrentWorld
  nameWithType: JSONReader.CurrentWorld
  fullName: JSONReader.CurrentWorld
  type: Class
  source:
    remote:
      path: Assets/Scripts/LevelScripts/JSONReader.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: CurrentWorld
    path: ../Assets/Scripts/LevelScripts/JSONReader.cs
    startLine: 125
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class JSONReader.CurrentWorld
    content.vb: >-
      <Serializable>

      Public Class JSONReader.CurrentWorld
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.JSONReader.CurrentWorld.worldName
  commentId: F:Global.JSONReader.CurrentWorld.worldName
  id: worldName
  parent: Global.JSONReader.CurrentWorld
  langs:
  - csharp
  - vb
  name: worldName
  nameWithType: JSONReader.CurrentWorld.worldName
  fullName: JSONReader.CurrentWorld.worldName
  type: Field
  source:
    remote:
      path: Assets/Scripts/LevelScripts/JSONReader.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: worldName
    path: ../Assets/Scripts/LevelScripts/JSONReader.cs
    startLine: 128
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string worldName
    return:
      type: System.String
    content.vb: Public worldName As String
- uid: Global.JSONReader.CurrentWorld.enemiesMain
  commentId: F:Global.JSONReader.CurrentWorld.enemiesMain
  id: enemiesMain
  parent: Global.JSONReader.CurrentWorld
  langs:
  - csharp
  - vb
  name: enemiesMain
  nameWithType: JSONReader.CurrentWorld.enemiesMain
  fullName: JSONReader.CurrentWorld.enemiesMain
  type: Field
  source:
    remote:
      path: Assets/Scripts/LevelScripts/JSONReader.cs
      branch: master
      repo: https://github.com/AIChubar/GPTJRPG
    id: enemiesMain
    path: ../Assets/Scripts/LevelScripts/JSONReader.cs
    startLine: 129
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public JSONReader.UnitJSON[] enemiesMain
    return:
      type: Global.JSONReader.UnitJSON[]
    content.vb: Public enemiesMain As JSONReader.UnitJSON()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.JSONReader.UnitJSON[]
  isExternal: true
  name: UnitJSON[]
  nameWithType: JSONReader.UnitJSON[]
  fullName: JSONReader.UnitJSON[]
  nameWithType.vb: JSONReader.UnitJSON()
  fullName.vb: JSONReader.UnitJSON()
  name.vb: UnitJSON()
  spec.csharp:
  - uid: Global.JSONReader.UnitJSON
    name: UnitJSON
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.JSONReader.UnitJSON
    name: UnitJSON
  - name: (
  - name: )
